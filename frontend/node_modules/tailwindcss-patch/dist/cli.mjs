import process from 'node:process';
import cac from 'cac';
import { configName, getConfig, initConfig } from '@tailwindcss-mangle/config';
import { T as TailwindcssPatcher, g as getPatchOptions, l as logger } from './shared/tailwindcss-patch.324d67e5.mjs';
import 'node:path';
import 'fs-extra';
import '@babel/types';
import 'resolve';
import 'semver';
import 'consola';
import '@babel/generator';
import '@babel/traverse';
import '@babel/parser';
import 'postcss';
import 'lilconfig';
import 'jiti';

function init() {
  const cwd = process.cwd();
  return initConfig(cwd);
}
const cli = cac();
cli.command("install", "patch install").action(() => {
  const twPatcher = new TailwindcssPatcher({
    patch: getPatchOptions()
  });
  twPatcher.patch();
});
cli.command("init").action(async () => {
  await init();
  logger.success(`\u2728 ${configName}.config.ts initialized!`);
});
cli.command("extract").action(async () => {
  const { config } = await getConfig();
  if (config) {
    const twPatcher = new TailwindcssPatcher();
    const p = await twPatcher.extract(config.patch);
    logger.success(`\u2728 tailwindcss-patch extract success! file path: ${p}`);
  }
});
cli.help();
cli.parse();
