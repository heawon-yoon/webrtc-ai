{
  "version": 3,
  "sources": ["../../../../../node_modules/markdown-it-mathjax/markdown-it-mathjax.js"],
  "sourcesContent": [";(function (root, factory) {\n  if (typeof exports === 'object') {\n    module.exports = factory()\n  } else {\n    root.markdownitMathjax = factory()\n  }\n})(this, function () {\n  function math (state, silent) {\n    var startMathPos = state.pos\n    if (state.src.charCodeAt(startMathPos) !== 0x5C /* \\ */) {\n      return false\n    }\n    var match = state.src.slice(++startMathPos).match(/^(?:\\\\\\[|\\\\\\(|begin\\{([^}]*)\\})/)\n    if (!match) {\n      return false\n    }\n    startMathPos += match[0].length\n    var type, endMarker, includeMarkers\n    if (match[0] === '\\\\[') {\n      type = 'display_math'\n      endMarker = '\\\\\\\\]'\n    } else if (match[0] === '\\\\(') {\n      type = 'inline_math'\n      endMarker = '\\\\\\\\)'\n    } else if (match[1]) {\n      type = 'math'\n      endMarker = '\\\\end{' + match[1] + '}'\n      includeMarkers = true\n    }\n    var endMarkerPos = state.src.indexOf(endMarker, startMathPos)\n    if (endMarkerPos === -1) {\n      return false\n    }\n    var nextPos = endMarkerPos + endMarker.length\n    if (!silent) {\n      var token = state.push(type, '', 0)\n      token.content = includeMarkers\n        ? state.src.slice(state.pos, nextPos)\n        : state.src.slice(startMathPos, endMarkerPos)\n    }\n    state.pos = nextPos\n    return true\n  }\n\n  function texMath (state, silent) {\n    var startMathPos = state.pos\n    if (state.src.charCodeAt(startMathPos) !== 0x24 /* $ */) {\n      return false\n    }\n\n    // Parse tex math according to http://pandoc.org/README.html#math\n    var endMarker = '$'\n    var afterStartMarker = state.src.charCodeAt(++startMathPos)\n    if (afterStartMarker === 0x24 /* $ */) {\n      endMarker = '$$'\n      if (state.src.charCodeAt(++startMathPos) === 0x24 /* $ */) {\n        // 3 markers are too much\n        return false\n      }\n    } else {\n      // Skip if opening $ is succeeded by a space character\n      if (afterStartMarker === 0x20 /* space */ || afterStartMarker === 0x09 /* \\t */ || afterStartMarker === 0x0a /* \\n */) {\n        return false\n      }\n    }\n    var endMarkerPos = state.src.indexOf(endMarker, startMathPos)\n    if (endMarkerPos === -1) {\n      return false\n    }\n    if (state.src.charCodeAt(endMarkerPos - 1) === 0x5C /* \\ */) {\n      return false\n    }\n    var nextPos = endMarkerPos + endMarker.length\n    if (endMarker.length === 1) {\n      // Skip if $ is preceded by a space character\n      var beforeEndMarker = state.src.charCodeAt(endMarkerPos - 1)\n      if (beforeEndMarker === 0x20 /* space */ || beforeEndMarker === 0x09 /* \\t */ || beforeEndMarker === 0x0a /* \\n */) {\n        return false\n      }\n      // Skip if closing $ is succeeded by a digit (eg $5 $10 ...)\n      var suffix = state.src.charCodeAt(nextPos)\n      if (suffix >= 0x30 && suffix < 0x3A) {\n        return false\n      }\n    }\n\n    if (!silent) {\n      var token = state.push(endMarker.length === 1 ? 'inline_math' : 'display_math', '', 0)\n      token.content = state.src.slice(startMathPos, endMarkerPos)\n    }\n    state.pos = nextPos\n    return true\n  }\n\n  function escapeHtml (html) {\n    return html.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ')\n  }\n\n  function extend (options, defaults) {\n    return Object.keys(defaults).reduce(function (result, key) {\n      if (result[key] === undefined) {\n        result[key] = defaults[key]\n      }\n      return result\n    }, options)\n  }\n\n  var mapping = {\n    'math': 'Math',\n    'inline_math': 'InlineMath',\n    'display_math': 'DisplayMath'\n  }\n\n  return function (options) {\n    var defaults = {\n      beforeMath: '',\n      afterMath: '',\n      beforeInlineMath: '\\\\(',\n      afterInlineMath: '\\\\)',\n      beforeDisplayMath: '\\\\[',\n      afterDisplayMath: '\\\\]'\n    }\n    options = extend(options || {}, defaults)\n\n    return function (md) {\n      md.inline.ruler.before('escape', 'math', math)\n      md.inline.ruler.push('texMath', texMath)\n\n      Object.keys(mapping).forEach(function (key) {\n        var before = options['before' + mapping[key]]\n        var after = options['after' + mapping[key]]\n        md.renderer.rules[key] = function (tokens, idx) {\n          return before + escapeHtml(tokens[idx].content) + after\n        }\n      })\n    }\n  }\n})\n"],
  "mappings": "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",
  "names": []
}
